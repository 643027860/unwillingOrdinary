{"remainingRequest":"D:\\home\\vuepress-boke\\talent-baoda\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\home\\vuepress-boke\\talent-baoda\\node_modules\\dayjs\\dayjs.min.js","dependencies":[{"path":"D:\\home\\vuepress-boke\\talent-baoda\\node_modules\\dayjs\\dayjs.min.js","mtime":499162500000},{"path":"D:\\home\\vuepress-boke\\talent-baoda\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\home\\vuepress-boke\\talent-baoda\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1pc28tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1qc29uIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC50by1qc29uIik7Cgp2YXIgX3R5cGVvZiA9IHJlcXVpcmUoIkQ6L2hvbWUvdnVlcHJlc3MtYm9rZS90YWxlbnQtYmFvZGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mIik7CgohZnVuY3Rpb24gKHQsIGUpIHsKICAib2JqZWN0IiA9PSAodHlwZW9mIGV4cG9ydHMgPT09ICJ1bmRlZmluZWQiID8gInVuZGVmaW5lZCIgOiBfdHlwZW9mKGV4cG9ydHMpKSAmJiAidW5kZWZpbmVkIiAhPSB0eXBlb2YgbW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgPSBlKCkgOiAiZnVuY3Rpb24iID09IHR5cGVvZiBkZWZpbmUgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShlKSA6IHQuZGF5anMgPSBlKCk7Cn0odGhpcywgZnVuY3Rpb24gKCkgewogICJ1c2Ugc3RyaWN0IjsKCiAgdmFyIHQgPSAibWlsbGlzZWNvbmQiLAogICAgICBlID0gInNlY29uZCIsCiAgICAgIG4gPSAibWludXRlIiwKICAgICAgciA9ICJob3VyIiwKICAgICAgaSA9ICJkYXkiLAogICAgICBzID0gIndlZWsiLAogICAgICB1ID0gIm1vbnRoIiwKICAgICAgYSA9ICJxdWFydGVyIiwKICAgICAgbyA9ICJ5ZWFyIiwKICAgICAgZiA9ICJkYXRlIiwKICAgICAgaCA9IC9eKFxkezR9KVstL10/KFxkezEsMn0pP1stL10/KFxkezAsMn0pW14wLTldKihcZHsxLDJ9KT86PyhcZHsxLDJ9KT86PyhcZHsxLDJ9KT8uPyhcZCspPyQvLAogICAgICBjID0gL1xbKFteXF1dKyldfFl7MSw0fXxNezEsNH18RHsxLDJ9fGR7MSw0fXxIezEsMn18aHsxLDJ9fGF8QXxtezEsMn18c3sxLDJ9fFp7MSwyfXxTU1MvZywKICAgICAgZCA9IHsKICAgIG5hbWU6ICJlbiIsCiAgICB3ZWVrZGF5czogIlN1bmRheV9Nb25kYXlfVHVlc2RheV9XZWRuZXNkYXlfVGh1cnNkYXlfRnJpZGF5X1NhdHVyZGF5Ii5zcGxpdCgiXyIpLAogICAgbW9udGhzOiAiSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlciIuc3BsaXQoIl8iKQogIH0sCiAgICAgICQgPSBmdW5jdGlvbiAkKHQsIGUsIG4pIHsKICAgIHZhciByID0gU3RyaW5nKHQpOwogICAgcmV0dXJuICFyIHx8IHIubGVuZ3RoID49IGUgPyB0IDogIiIgKyBBcnJheShlICsgMSAtIHIubGVuZ3RoKS5qb2luKG4pICsgdDsKICB9LAogICAgICBsID0gewogICAgczogJCwKICAgIHo6IGZ1bmN0aW9uIHoodCkgewogICAgICB2YXIgZSA9IC10LnV0Y09mZnNldCgpLAogICAgICAgICAgbiA9IE1hdGguYWJzKGUpLAogICAgICAgICAgciA9IE1hdGguZmxvb3IobiAvIDYwKSwKICAgICAgICAgIGkgPSBuICUgNjA7CiAgICAgIHJldHVybiAoZSA8PSAwID8gIisiIDogIi0iKSArICQociwgMiwgIjAiKSArICI6IiArICQoaSwgMiwgIjAiKTsKICAgIH0sCiAgICBtOiBmdW5jdGlvbiB0KGUsIG4pIHsKICAgICAgaWYgKGUuZGF0ZSgpIDwgbi5kYXRlKCkpIHJldHVybiAtdChuLCBlKTsKICAgICAgdmFyIHIgPSAxMiAqIChuLnllYXIoKSAtIGUueWVhcigpKSArIChuLm1vbnRoKCkgLSBlLm1vbnRoKCkpLAogICAgICAgICAgaSA9IGUuY2xvbmUoKS5hZGQociwgdSksCiAgICAgICAgICBzID0gbiAtIGkgPCAwLAogICAgICAgICAgYSA9IGUuY2xvbmUoKS5hZGQociArIChzID8gLTEgOiAxKSwgdSk7CiAgICAgIHJldHVybiArKC0ociArIChuIC0gaSkgLyAocyA/IGkgLSBhIDogYSAtIGkpKSB8fCAwKTsKICAgIH0sCiAgICBhOiBmdW5jdGlvbiBhKHQpIHsKICAgICAgcmV0dXJuIHQgPCAwID8gTWF0aC5jZWlsKHQpIHx8IDAgOiBNYXRoLmZsb29yKHQpOwogICAgfSwKICAgIHA6IGZ1bmN0aW9uIHAoaCkgewogICAgICByZXR1cm4gewogICAgICAgIE06IHUsCiAgICAgICAgeTogbywKICAgICAgICB3OiBzLAogICAgICAgIGQ6IGksCiAgICAgICAgRDogZiwKICAgICAgICBoOiByLAogICAgICAgIG06IG4sCiAgICAgICAgczogZSwKICAgICAgICBtczogdCwKICAgICAgICBROiBhCiAgICAgIH1baF0gfHwgU3RyaW5nKGggfHwgIiIpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvcyQvLCAiIik7CiAgICB9LAogICAgdTogZnVuY3Rpb24gdSh0KSB7CiAgICAgIHJldHVybiB2b2lkIDAgPT09IHQ7CiAgICB9CiAgfSwKICAgICAgeSA9ICJlbiIsCiAgICAgIE0gPSB7fTsKCiAgTVt5XSA9IGQ7CgogIHZhciBtID0gZnVuY3Rpb24gbSh0KSB7CiAgICByZXR1cm4gdCBpbnN0YW5jZW9mIFM7CiAgfSwKICAgICAgRCA9IGZ1bmN0aW9uIEQodCwgZSwgbikgewogICAgdmFyIHI7CiAgICBpZiAoIXQpIHJldHVybiB5OwogICAgaWYgKCJzdHJpbmciID09IHR5cGVvZiB0KSBNW3RdICYmIChyID0gdCksIGUgJiYgKE1bdF0gPSBlLCByID0gdCk7ZWxzZSB7CiAgICAgIHZhciBpID0gdC5uYW1lOwogICAgICBNW2ldID0gdCwgciA9IGk7CiAgICB9CiAgICByZXR1cm4gIW4gJiYgciAmJiAoeSA9IHIpLCByIHx8ICFuICYmIHk7CiAgfSwKICAgICAgdiA9IGZ1bmN0aW9uIHYodCwgZSkgewogICAgaWYgKG0odCkpIHJldHVybiB0LmNsb25lKCk7CiAgICB2YXIgbiA9ICJvYmplY3QiID09IF90eXBlb2YoZSkgPyBlIDoge307CiAgICByZXR1cm4gbi5kYXRlID0gdCwgbi5hcmdzID0gYXJndW1lbnRzLCBuZXcgUyhuKTsKICB9LAogICAgICBnID0gbDsKCiAgZy5sID0gRCwgZy5pID0gbSwgZy53ID0gZnVuY3Rpb24gKHQsIGUpIHsKICAgIHJldHVybiB2KHQsIHsKICAgICAgbG9jYWxlOiBlLiRMLAogICAgICB1dGM6IGUuJHUsCiAgICAgIHg6IGUuJHgsCiAgICAgICRvZmZzZXQ6IGUuJG9mZnNldAogICAgfSk7CiAgfTsKCiAgdmFyIFMgPSBmdW5jdGlvbiAoKSB7CiAgICBmdW5jdGlvbiBkKHQpIHsKICAgICAgdGhpcy4kTCA9IEQodC5sb2NhbGUsIG51bGwsICEwKSwgdGhpcy5wYXJzZSh0KTsKICAgIH0KCiAgICB2YXIgJCA9IGQucHJvdG90eXBlOwogICAgcmV0dXJuICQucGFyc2UgPSBmdW5jdGlvbiAodCkgewogICAgICB0aGlzLiRkID0gZnVuY3Rpb24gKHQpIHsKICAgICAgICB2YXIgZSA9IHQuZGF0ZSwKICAgICAgICAgICAgbiA9IHQudXRjOwogICAgICAgIGlmIChudWxsID09PSBlKSByZXR1cm4gbmV3IERhdGUoTmFOKTsKICAgICAgICBpZiAoZy51KGUpKSByZXR1cm4gbmV3IERhdGUoKTsKICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIERhdGUpIHJldHVybiBuZXcgRGF0ZShlKTsKCiAgICAgICAgaWYgKCJzdHJpbmciID09IHR5cGVvZiBlICYmICEvWiQvaS50ZXN0KGUpKSB7CiAgICAgICAgICB2YXIgciA9IGUubWF0Y2goaCk7CgogICAgICAgICAgaWYgKHIpIHsKICAgICAgICAgICAgdmFyIGkgPSByWzJdIC0gMSB8fCAwLAogICAgICAgICAgICAgICAgcyA9IChyWzddIHx8ICIwIikuc3Vic3RyaW5nKDAsIDMpOwogICAgICAgICAgICByZXR1cm4gbiA/IG5ldyBEYXRlKERhdGUuVVRDKHJbMV0sIGksIHJbM10gfHwgMSwgcls0XSB8fCAwLCByWzVdIHx8IDAsIHJbNl0gfHwgMCwgcykpIDogbmV3IERhdGUoclsxXSwgaSwgclszXSB8fCAxLCByWzRdIHx8IDAsIHJbNV0gfHwgMCwgcls2XSB8fCAwLCBzKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBuZXcgRGF0ZShlKTsKICAgICAgfSh0KSwgdGhpcy4keCA9IHQueCB8fCB7fSwgdGhpcy5pbml0KCk7CiAgICB9LCAkLmluaXQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciB0ID0gdGhpcy4kZDsKICAgICAgdGhpcy4keSA9IHQuZ2V0RnVsbFllYXIoKSwgdGhpcy4kTSA9IHQuZ2V0TW9udGgoKSwgdGhpcy4kRCA9IHQuZ2V0RGF0ZSgpLCB0aGlzLiRXID0gdC5nZXREYXkoKSwgdGhpcy4kSCA9IHQuZ2V0SG91cnMoKSwgdGhpcy4kbSA9IHQuZ2V0TWludXRlcygpLCB0aGlzLiRzID0gdC5nZXRTZWNvbmRzKCksIHRoaXMuJG1zID0gdC5nZXRNaWxsaXNlY29uZHMoKTsKICAgIH0sICQuJHV0aWxzID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gZzsKICAgIH0sICQuaXNWYWxpZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICEoIkludmFsaWQgRGF0ZSIgPT09IHRoaXMuJGQudG9TdHJpbmcoKSk7CiAgICB9LCAkLmlzU2FtZSA9IGZ1bmN0aW9uICh0LCBlKSB7CiAgICAgIHZhciBuID0gdih0KTsKICAgICAgcmV0dXJuIHRoaXMuc3RhcnRPZihlKSA8PSBuICYmIG4gPD0gdGhpcy5lbmRPZihlKTsKICAgIH0sICQuaXNBZnRlciA9IGZ1bmN0aW9uICh0LCBlKSB7CiAgICAgIHJldHVybiB2KHQpIDwgdGhpcy5zdGFydE9mKGUpOwogICAgfSwgJC5pc0JlZm9yZSA9IGZ1bmN0aW9uICh0LCBlKSB7CiAgICAgIHJldHVybiB0aGlzLmVuZE9mKGUpIDwgdih0KTsKICAgIH0sICQuJGcgPSBmdW5jdGlvbiAodCwgZSwgbikgewogICAgICByZXR1cm4gZy51KHQpID8gdGhpc1tlXSA6IHRoaXMuc2V0KG4sIHQpOwogICAgfSwgJC51bml4ID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLnZhbHVlT2YoKSAvIDFlMyk7CiAgICB9LCAkLnZhbHVlT2YgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRkLmdldFRpbWUoKTsKICAgIH0sICQuc3RhcnRPZiA9IGZ1bmN0aW9uICh0LCBhKSB7CiAgICAgIHZhciBoID0gdGhpcywKICAgICAgICAgIGMgPSAhIWcudShhKSB8fCBhLAogICAgICAgICAgZCA9IGcucCh0KSwKICAgICAgICAgICQgPSBmdW5jdGlvbiAkKHQsIGUpIHsKICAgICAgICB2YXIgbiA9IGcudyhoLiR1ID8gRGF0ZS5VVEMoaC4keSwgZSwgdCkgOiBuZXcgRGF0ZShoLiR5LCBlLCB0KSwgaCk7CiAgICAgICAgcmV0dXJuIGMgPyBuIDogbi5lbmRPZihpKTsKICAgICAgfSwKICAgICAgICAgIGwgPSBmdW5jdGlvbiBsKHQsIGUpIHsKICAgICAgICByZXR1cm4gZy53KGgudG9EYXRlKClbdF0uYXBwbHkoaC50b0RhdGUoInMiKSwgKGMgPyBbMCwgMCwgMCwgMF0gOiBbMjMsIDU5LCA1OSwgOTk5XSkuc2xpY2UoZSkpLCBoKTsKICAgICAgfSwKICAgICAgICAgIHkgPSB0aGlzLiRXLAogICAgICAgICAgTSA9IHRoaXMuJE0sCiAgICAgICAgICBtID0gdGhpcy4kRCwKICAgICAgICAgIEQgPSAic2V0IiArICh0aGlzLiR1ID8gIlVUQyIgOiAiIik7CgogICAgICBzd2l0Y2ggKGQpIHsKICAgICAgICBjYXNlIG86CiAgICAgICAgICByZXR1cm4gYyA/ICQoMSwgMCkgOiAkKDMxLCAxMSk7CgogICAgICAgIGNhc2UgdToKICAgICAgICAgIHJldHVybiBjID8gJCgxLCBNKSA6ICQoMCwgTSArIDEpOwoKICAgICAgICBjYXNlIHM6CiAgICAgICAgICB2YXIgdiA9IHRoaXMuJGxvY2FsZSgpLndlZWtTdGFydCB8fCAwLAogICAgICAgICAgICAgIFMgPSAoeSA8IHYgPyB5ICsgNyA6IHkpIC0gdjsKICAgICAgICAgIHJldHVybiAkKGMgPyBtIC0gUyA6IG0gKyAoNiAtIFMpLCBNKTsKCiAgICAgICAgY2FzZSBpOgogICAgICAgIGNhc2UgZjoKICAgICAgICAgIHJldHVybiBsKEQgKyAiSG91cnMiLCAwKTsKCiAgICAgICAgY2FzZSByOgogICAgICAgICAgcmV0dXJuIGwoRCArICJNaW51dGVzIiwgMSk7CgogICAgICAgIGNhc2UgbjoKICAgICAgICAgIHJldHVybiBsKEQgKyAiU2Vjb25kcyIsIDIpOwoKICAgICAgICBjYXNlIGU6CiAgICAgICAgICByZXR1cm4gbChEICsgIk1pbGxpc2Vjb25kcyIsIDMpOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuIHRoaXMuY2xvbmUoKTsKICAgICAgfQogICAgfSwgJC5lbmRPZiA9IGZ1bmN0aW9uICh0KSB7CiAgICAgIHJldHVybiB0aGlzLnN0YXJ0T2YodCwgITEpOwogICAgfSwgJC4kc2V0ID0gZnVuY3Rpb24gKHMsIGEpIHsKICAgICAgdmFyIGgsCiAgICAgICAgICBjID0gZy5wKHMpLAogICAgICAgICAgZCA9ICJzZXQiICsgKHRoaXMuJHUgPyAiVVRDIiA6ICIiKSwKICAgICAgICAgICQgPSAoaCA9IHt9LCBoW2ldID0gZCArICJEYXRlIiwgaFtmXSA9IGQgKyAiRGF0ZSIsIGhbdV0gPSBkICsgIk1vbnRoIiwgaFtvXSA9IGQgKyAiRnVsbFllYXIiLCBoW3JdID0gZCArICJIb3VycyIsIGhbbl0gPSBkICsgIk1pbnV0ZXMiLCBoW2VdID0gZCArICJTZWNvbmRzIiwgaFt0XSA9IGQgKyAiTWlsbGlzZWNvbmRzIiwgaClbY10sCiAgICAgICAgICBsID0gYyA9PT0gaSA/IHRoaXMuJEQgKyAoYSAtIHRoaXMuJFcpIDogYTsKCiAgICAgIGlmIChjID09PSB1IHx8IGMgPT09IG8pIHsKICAgICAgICB2YXIgeSA9IHRoaXMuY2xvbmUoKS5zZXQoZiwgMSk7CiAgICAgICAgeS4kZFskXShsKSwgeS5pbml0KCksIHRoaXMuJGQgPSB5LnNldChmLCBNYXRoLm1pbih0aGlzLiRELCB5LmRheXNJbk1vbnRoKCkpKS4kZDsKICAgICAgfSBlbHNlICQgJiYgdGhpcy4kZFskXShsKTsKCiAgICAgIHJldHVybiB0aGlzLmluaXQoKSwgdGhpczsKICAgIH0sICQuc2V0ID0gZnVuY3Rpb24gKHQsIGUpIHsKICAgICAgcmV0dXJuIHRoaXMuY2xvbmUoKS4kc2V0KHQsIGUpOwogICAgfSwgJC5nZXQgPSBmdW5jdGlvbiAodCkgewogICAgICByZXR1cm4gdGhpc1tnLnAodCldKCk7CiAgICB9LCAkLmFkZCA9IGZ1bmN0aW9uICh0LCBhKSB7CiAgICAgIHZhciBmLAogICAgICAgICAgaCA9IHRoaXM7CiAgICAgIHQgPSBOdW1iZXIodCk7CgogICAgICB2YXIgYyA9IGcucChhKSwKICAgICAgICAgIGQgPSBmdW5jdGlvbiBkKGUpIHsKICAgICAgICB2YXIgbiA9IHYoaCk7CiAgICAgICAgcmV0dXJuIGcudyhuLmRhdGUobi5kYXRlKCkgKyBNYXRoLnJvdW5kKGUgKiB0KSksIGgpOwogICAgICB9OwoKICAgICAgaWYgKGMgPT09IHUpIHJldHVybiB0aGlzLnNldCh1LCB0aGlzLiRNICsgdCk7CiAgICAgIGlmIChjID09PSBvKSByZXR1cm4gdGhpcy5zZXQobywgdGhpcy4keSArIHQpOwogICAgICBpZiAoYyA9PT0gaSkgcmV0dXJuIGQoMSk7CiAgICAgIGlmIChjID09PSBzKSByZXR1cm4gZCg3KTsKICAgICAgdmFyICQgPSAoZiA9IHt9LCBmW25dID0gNmU0LCBmW3JdID0gMzZlNSwgZltlXSA9IDFlMywgZilbY10gfHwgMSwKICAgICAgICAgIGwgPSB0aGlzLiRkLmdldFRpbWUoKSArIHQgKiAkOwogICAgICByZXR1cm4gZy53KGwsIHRoaXMpOwogICAgfSwgJC5zdWJ0cmFjdCA9IGZ1bmN0aW9uICh0LCBlKSB7CiAgICAgIHJldHVybiB0aGlzLmFkZCgtMSAqIHQsIGUpOwogICAgfSwgJC5mb3JtYXQgPSBmdW5jdGlvbiAodCkgewogICAgICB2YXIgZSA9IHRoaXM7CiAgICAgIGlmICghdGhpcy5pc1ZhbGlkKCkpIHJldHVybiAiSW52YWxpZCBEYXRlIjsKCiAgICAgIHZhciBuID0gdCB8fCAiWVlZWS1NTS1ERFRISDptbTpzc1oiLAogICAgICAgICAgciA9IGcueih0aGlzKSwKICAgICAgICAgIGkgPSB0aGlzLiRsb2NhbGUoKSwKICAgICAgICAgIHMgPSB0aGlzLiRILAogICAgICAgICAgdSA9IHRoaXMuJG0sCiAgICAgICAgICBhID0gdGhpcy4kTSwKICAgICAgICAgIG8gPSBpLndlZWtkYXlzLAogICAgICAgICAgZiA9IGkubW9udGhzLAogICAgICAgICAgaCA9IGZ1bmN0aW9uIGgodCwgciwgaSwgcykgewogICAgICAgIHJldHVybiB0ICYmICh0W3JdIHx8IHQoZSwgbikpIHx8IGlbcl0uc3Vic3RyKDAsIHMpOwogICAgICB9LAogICAgICAgICAgZCA9IGZ1bmN0aW9uIGQodCkgewogICAgICAgIHJldHVybiBnLnMocyAlIDEyIHx8IDEyLCB0LCAiMCIpOwogICAgICB9LAogICAgICAgICAgJCA9IGkubWVyaWRpZW0gfHwgZnVuY3Rpb24gKHQsIGUsIG4pIHsKICAgICAgICB2YXIgciA9IHQgPCAxMiA/ICJBTSIgOiAiUE0iOwogICAgICAgIHJldHVybiBuID8gci50b0xvd2VyQ2FzZSgpIDogcjsKICAgICAgfSwKICAgICAgICAgIGwgPSB7CiAgICAgICAgWVk6IFN0cmluZyh0aGlzLiR5KS5zbGljZSgtMiksCiAgICAgICAgWVlZWTogdGhpcy4keSwKICAgICAgICBNOiBhICsgMSwKICAgICAgICBNTTogZy5zKGEgKyAxLCAyLCAiMCIpLAogICAgICAgIE1NTTogaChpLm1vbnRoc1Nob3J0LCBhLCBmLCAzKSwKICAgICAgICBNTU1NOiBoKGYsIGEpLAogICAgICAgIEQ6IHRoaXMuJEQsCiAgICAgICAgREQ6IGcucyh0aGlzLiRELCAyLCAiMCIpLAogICAgICAgIGQ6IFN0cmluZyh0aGlzLiRXKSwKICAgICAgICBkZDogaChpLndlZWtkYXlzTWluLCB0aGlzLiRXLCBvLCAyKSwKICAgICAgICBkZGQ6IGgoaS53ZWVrZGF5c1Nob3J0LCB0aGlzLiRXLCBvLCAzKSwKICAgICAgICBkZGRkOiBvW3RoaXMuJFddLAogICAgICAgIEg6IFN0cmluZyhzKSwKICAgICAgICBISDogZy5zKHMsIDIsICIwIiksCiAgICAgICAgaDogZCgxKSwKICAgICAgICBoaDogZCgyKSwKICAgICAgICBhOiAkKHMsIHUsICEwKSwKICAgICAgICBBOiAkKHMsIHUsICExKSwKICAgICAgICBtOiBTdHJpbmcodSksCiAgICAgICAgbW06IGcucyh1LCAyLCAiMCIpLAogICAgICAgIHM6IFN0cmluZyh0aGlzLiRzKSwKICAgICAgICBzczogZy5zKHRoaXMuJHMsIDIsICIwIiksCiAgICAgICAgU1NTOiBnLnModGhpcy4kbXMsIDMsICIwIiksCiAgICAgICAgWjogcgogICAgICB9OwoKICAgICAgcmV0dXJuIG4ucmVwbGFjZShjLCBmdW5jdGlvbiAodCwgZSkgewogICAgICAgIHJldHVybiBlIHx8IGxbdF0gfHwgci5yZXBsYWNlKCI6IiwgIiIpOwogICAgICB9KTsKICAgIH0sICQudXRjT2Zmc2V0ID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gMTUgKiAtTWF0aC5yb3VuZCh0aGlzLiRkLmdldFRpbWV6b25lT2Zmc2V0KCkgLyAxNSk7CiAgICB9LCAkLmRpZmYgPSBmdW5jdGlvbiAodCwgZiwgaCkgewogICAgICB2YXIgYywKICAgICAgICAgIGQgPSBnLnAoZiksCiAgICAgICAgICAkID0gdih0KSwKICAgICAgICAgIGwgPSA2ZTQgKiAoJC51dGNPZmZzZXQoKSAtIHRoaXMudXRjT2Zmc2V0KCkpLAogICAgICAgICAgeSA9IHRoaXMgLSAkLAogICAgICAgICAgTSA9IGcubSh0aGlzLCAkKTsKICAgICAgcmV0dXJuIE0gPSAoYyA9IHt9LCBjW29dID0gTSAvIDEyLCBjW3VdID0gTSwgY1thXSA9IE0gLyAzLCBjW3NdID0gKHkgLSBsKSAvIDYwNDhlNSwgY1tpXSA9ICh5IC0gbCkgLyA4NjRlNSwgY1tyXSA9IHkgLyAzNmU1LCBjW25dID0geSAvIDZlNCwgY1tlXSA9IHkgLyAxZTMsIGMpW2RdIHx8IHksIGggPyBNIDogZy5hKE0pOwogICAgfSwgJC5kYXlzSW5Nb250aCA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuZW5kT2YodSkuJEQ7CiAgICB9LCAkLiRsb2NhbGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBNW3RoaXMuJExdOwogICAgfSwgJC5sb2NhbGUgPSBmdW5jdGlvbiAodCwgZSkgewogICAgICBpZiAoIXQpIHJldHVybiB0aGlzLiRMOwogICAgICB2YXIgbiA9IHRoaXMuY2xvbmUoKSwKICAgICAgICAgIHIgPSBEKHQsIGUsICEwKTsKICAgICAgcmV0dXJuIHIgJiYgKG4uJEwgPSByKSwgbjsKICAgIH0sICQuY2xvbmUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBnLncodGhpcy4kZCwgdGhpcyk7CiAgICB9LCAkLnRvRGF0ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMudmFsdWVPZigpKTsKICAgIH0sICQudG9KU09OID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5pc1ZhbGlkKCkgPyB0aGlzLnRvSVNPU3RyaW5nKCkgOiBudWxsOwogICAgfSwgJC50b0lTT1N0cmluZyA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJGQudG9JU09TdHJpbmcoKTsKICAgIH0sICQudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRkLnRvVVRDU3RyaW5nKCk7CiAgICB9LCBkOwogIH0oKSwKICAgICAgcCA9IFMucHJvdG90eXBlOwoKICByZXR1cm4gdi5wcm90b3R5cGUgPSBwLCBbWyIkbXMiLCB0XSwgWyIkcyIsIGVdLCBbIiRtIiwgbl0sIFsiJEgiLCByXSwgWyIkVyIsIGldLCBbIiRNIiwgdV0sIFsiJHkiLCBvXSwgWyIkRCIsIGZdXS5mb3JFYWNoKGZ1bmN0aW9uICh0KSB7CiAgICBwW3RbMV1dID0gZnVuY3Rpb24gKGUpIHsKICAgICAgcmV0dXJuIHRoaXMuJGcoZSwgdFswXSwgdFsxXSk7CiAgICB9OwogIH0pLCB2LmV4dGVuZCA9IGZ1bmN0aW9uICh0LCBlKSB7CiAgICByZXR1cm4gdC4kaSB8fCAodChlLCBTLCB2KSwgdC4kaSA9ICEwKSwgdjsKICB9LCB2LmxvY2FsZSA9IEQsIHYuaXNEYXlqcyA9IG0sIHYudW5peCA9IGZ1bmN0aW9uICh0KSB7CiAgICByZXR1cm4gdigxZTMgKiB0KTsKICB9LCB2LmVuID0gTVt5XSwgdi5McyA9IE0sIHYucCA9IHt9LCB2Owp9KTs="},null]}